{"ast":null,"code":"var _jsxFileName = \"/Users/karlos/CorrectionReactHooks/step6/src/Components/ProgressBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgressBar(props) {\n  const progressWidth = calcProgressWidth(props.items);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex mt-3 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"mr-3\",\n      children: \"Progress:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 w-100\",\n      style: styleBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-100 align-self-end\",\n        style: progressWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = ProgressBar;\nfunction calcProgressWidth(items) {\n  let progress = 0;\n  items.forEach(item => {\n    if (item.isDone) progress++;\n  });\n  return {\n    width: progress * 100 / items.length + \"%\",\n    background: 'var(--blue)'\n  };\n}\nconst styleBar = {\n  height: '20px',\n  background: '#eeeeee'\n};\nexport { ProgressBar };\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["ProgressBar","props","progressWidth","calcProgressWidth","items","styleBar","progress","forEach","item","isDone","width","length","background","height"],"sources":["/Users/karlos/CorrectionReactHooks/step6/src/Components/ProgressBar.js"],"sourcesContent":["function ProgressBar(props) {\n  const progressWidth = calcProgressWidth(props.items);\n\n  return (\n    <div className=\"d-flex mt-3 mb-4\">\n      <h6 className=\"mr-3\">Progress:</h6> \n      <div className=\"d-flex mb-3 w-100\" style={styleBar}>\n          <div \n            className=\"h-100 align-self-end\" \n            style={progressWidth} \n          >\n          </div>\n      </div>\n    </div>\n  );\n}\n\nfunction calcProgressWidth(items) {\n  let progress = 0;\n\n  items.forEach(item => {\n    if (item.isDone)\n      progress++\n  });\n\n  return {width: progress * 100 / items.length + \"%\", background: 'var(--blue)'}\n}\n\nconst styleBar = {\n  height: '20px',\n  background: '#eeeeee',\n}\n\n\nexport { ProgressBar };"],"mappings":";;AAAA,SAASA,WAAW,CAACC,KAAK,EAAE;EAC1B,MAAMC,aAAa,GAAGC,iBAAiB,CAACF,KAAK,CAACG,KAAK,CAAC;EAEpD,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBAC/B;MAAI,SAAS,EAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACnC;MAAK,SAAS,EAAC,mBAAmB;MAAC,KAAK,EAAEC,QAAS;MAAA,uBAC/C;QACE,SAAS,EAAC,sBAAsB;QAChC,KAAK,EAAEH;MAAc;QAAA;QAAA;QAAA;MAAA;IAEjB;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KAfQF,WAAW;AAiBpB,SAASG,iBAAiB,CAACC,KAAK,EAAE;EAChC,IAAIE,QAAQ,GAAG,CAAC;EAEhBF,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;IACpB,IAAIA,IAAI,CAACC,MAAM,EACbH,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,OAAO;IAACI,KAAK,EAAEJ,QAAQ,GAAG,GAAG,GAAGF,KAAK,CAACO,MAAM,GAAG,GAAG;IAAEC,UAAU,EAAE;EAAa,CAAC;AAChF;AAEA,MAAMP,QAAQ,GAAG;EACfQ,MAAM,EAAE,MAAM;EACdD,UAAU,EAAE;AACd,CAAC;AAGD,SAASZ,WAAW;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}